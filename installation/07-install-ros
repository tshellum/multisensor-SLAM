#!/usr/bin/env bash
set -euxo pipefail
topdir=$(pwd)
# command -v sudo > /dev/null 2>&1 || function sudo { eval $@ ; }

VERSION_ID=$( grep -Po '(?<=VERSION_ID=")[\d.]+' /etc/os-release )
# Find software directory
# cd ${SOFTWARE_DIR}
cd ~/software

# # Setup your sources.list
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'

# # Set up your keys
sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# # Installation
sudo apt update
if [[ "${VERSION_ID}" == "18.04" ]]; then
    sudo apt install -y ros-melodic-desktop-full
    sudo apt install -y ros-melodic-slam-gmapping
    
    # Environment setup
    echo "source /opt/ros/melodic/setup.bash" >> ~/.bashrc 
    source ~/.bashrc
    
    sudo apt install -y python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential

    # Dependencies for building packages
    sudo rosdep init
    # sudo rosdep fix-permissions
    rosdep update


    # Install catkin build
    wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
    sudo apt-get update
    sudo apt-get -y install python-catkin-tools

elif [[ "${VERSION_ID}" == "20.04" ]]; then
    sudo apt install -y ros-noetic-desktop-full
    sudo apt install -y ros-noetic-slam-gmapping

    # Environment setup
    echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
    source ~/.bashrc

    sudo apt install -y python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential
    sudo apt install -y python3-rosdep

    # Dependencies for building packages
    sudo rosdep init
    # sudo rosdep fix-permissions
    rosdep update


    # Install catkin build
    sudo apt-get install -y ros-noetic-catkin
    sudo apt install -y python3-catkin-tools python3-osrf-pycommon
    wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
    sudo apt-get update
    sudo apt-get -y install python3-catkin-tools

else 
    echo ${VERSION_ID}
fi


# Automatically source current ros workspace if new terminal is opened in ros workspace. Assumes "Terminator" is used rather than gnome 
echo -e "\nif [ -f 'devel/setup.bash' ]; then" >> ~/.bashrc
echo -e "\tsource devel/setup.bash" >> ~/.bashrc
echo -e "fi\n" >> ~/.bashrc